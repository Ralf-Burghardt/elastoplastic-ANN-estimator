function [y1] = estimation_ANN(x1)
%neural network simulation function.
% [y1] = ANN_estimator(x1) takes these arguments:
%   x = 7xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.
%
% created by: 
% ########################################################################
% # R. Wuthenow                                                          #
% #                                                                      #
% # Clausthal University of Technology                                   #
% # Institut f. Maschinelle Anlagentechnik u. Betriebsfestigkeit (IMAB)  #
% # Professor Dr.-Ing. A. Esderts                                        #
% ########################################################################
%
% Copyright 2023 Ralf Wuthenow
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
%     http://www.apache.org/licenses/LICENSE-2.0
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.048024;0.0404895186702445;...
                   -0.0043747;600.163110288709; ...
                   0.0800104584113737;1.2312601;1.23126009999281];
x1_step1.gain = [2.15999815086614;0.020227702982692;...
                 3.75006909299033;0.00069091956512638;...
                 8.00135000621009;0.000180521185012547;...
                 0.000432588467772379];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.0405;-0.8229;...
     -1.7572;-0.0020;...
      0.0488;-0.0153;...
      0.6958;0.6702;...
      2.0807;-0.6831;...
      -0.8841;0.4762;...
      0.0032;-1.4291;...
      9.6411;6.5156;...
      0.0493;-0.3824;...
      0.3595;-6.6806;...
      0.5907;1.5412;...
      -0.2522;-0.9417;...
      0.7873;0.0031;...
      4.2344;-0.0778;...
      2.9660;0.9830;...
      -0.0082;0.0412;...
      -1.8935;-2.3703;...
      0.2358;1.5465;...
      -0.6889;-0.9746;...
      -10.7583;-3.4673;...
      0.0274;-2.6478;...
      -2.4561;-0.0101;...
      4.5715;-0.7283;...
      -1.3753;-2.0639;...
      0.2705;-0.03009;...
      1.2917;0.2913;...
      0.4446;-1.2297;...
      0.0010;-0.0161;...
      -1.1622;0.0189;...
      0.8295;-0.4482];

IW1_1 = [0.6584 1.3728 ...
        -0.1285 -0.2468 ...
         2.0227 0.6930 ...
         -2.1247; ...
         -0.5916 -0.0550 ...
         0.1029 0.5347 ...
         -0.6232 -2.9503 ...
         1.9169; ...
         2.1540 -2.3218 ...
         0.3210 0.1090 ...
         -0.0045 -0.9554 ...
         0.4523; ...
         -0.0007 -0.0103 ...
         0.0054 -0.0011 ...
         0.0062 -0.0033 ...
         -0.0030; ...
         0.07642 0.5596 ...
         -2.0365 -0.2494 ...
         -0.3303 -0.5182...
         0.2800; ...
         0.0128 -0.0115...
         0.0169 -0.0139...
         -0.0014 -0.0283...
         -0.0058;...
         0.2370 -0.4344...
         -0.5013 -0.4557...
         -0.5772 0.2740...
         -1.0601;...
         2.9162 -0.6880...
         -0.6261 -0.1212...
         0.0068 1.8625...
         -1.0998;...
         0.5563 1.6461...
         -0.1402 -0.0542...
         -0.0016 0.6217...
         -0.3048;...
         0.0927 0.1659...
         0.0101 0.3247...
         -0.3530 -0.7595...
         -0.2796;...
         -3.0238 0.2659...
         0.7626 0.0861...
         -0.0428 -1.6171...
         0.9516;...
         -0.3610 0.3372...
         -0.2148 -1.4288...
         -0.8846 -0.8903...
         -0.0261;...
         -0.0086 -0.0170...
         0.0142 -0.0008...
         0.0211 -0.0078...
         -0.0043;...
         -0.2135 0.0637...
         0.0988 -2.2452...
         -0.6382 0.8521...
         1.2839;...
         0.3290 9.1324...
         0.2204 0.0055...
         -0.02043 -0.8687...
         0.4549;...
         1.5854 5.7654...
         -0.2011 0.1052...
         -0.0864 -1.0546...
         0.2400;...
         -0.0080 -0.0026...
         0.0043 -0.0121...
         -0.0026 0.0069...
         0.02677;...
         1.0550 0.0864...
         2.3053 -0.2836...
         0.2429 1.1846...
         -0.7166;...
         -0.4201 0.2755...
         -0.2093 -1.7965...
         -0.7841 -1.0119...
         0.0550;...
         -2.0734 -5.5263...
         0.1857 -0.1215...
         0.0788 0.9948...
         -0.1597;...
         -0.0438 -0.0779...
         0.0221 -0.0174...
         -0.1456 0.5169...
         0.3855;...
         4.1361 0.0946...
         -0.5695 -0.014...
         -0.0235 0.3862...
         -0.3974;...
         0.9550 0.0987...
         2.2604 -0.3679...
         0.2656 1.5700...
         -0.9504;...
         -0.8911 -0.2015...
         0.1854 0.0596...
         -0.3371 -0.8236...
         0.2830;...
         1.3667 0.3722...
         -0.0710 -0.0475...
         0.1663 0.5038...
         -0.3578;...
         -0.0090 -0.0157...
         0.0369 0.0105...
         0.0232 -0.0170...
         -0.0143;...
         -1.3591 5.4188...
         -0.2060 0.0404...
         -0.0655 -1.2049...
         0.5411;...
         0.0212 0.0214...
         -0.0082 -0.0002...
         0.0417 -0.0365...
         -0.0310;...
         -1.4715 3.7377...
         -0.1970 0.0607...
         -0.0541 -1.2513...
         0.5511;...
         1.9610 0.5517...
         0.2223 -0.0651...
         0.0886 0.4994...
         -0.3243;...
         0.0237 0.0346...
         0.0060 -0.0093...
         -0.0166 0.0047...
         -0.0158;...
         -0.0140 0.0023...
         -0.0061 0.0302...
         -0.0165 -0.0188...
         0.04877;...
         -4.3254 -1.8621...
         0.7409 0.0978...
         0.0411 -0.8728...
         0.5721;...
         2.1309 -3.1243...
         0.2388 0.1157...
         -0.0104 -0.7724...
         0.3369;...
         -0.4719 0.1808...
         -0.2352 -2.2525...
         -0.6992 -1.1642...
         0.08919;...
         -0.2707 1.8170...
         -0.1604 -0.0684...
         0.0049 0.6458...
         -0.2926;...
         -0.0659 0.04277...
         0.02175 0.1678...
         -0.3091 -0.0610...
         -0.6764;...
         -1.2257 0.1157...
         0.2310 0.5184...
         -0.7196 -1.1796...
         0.5019;...
         1.4663 -11.6665...
         -0.0818 -0.0147...
         0.0571 1.1474...
         -0.5388;...
         -0.3178 -2.9039...
         -0.2034 -0.0282...
         0.0200 0.6277...
         -0.3285;...
         0.1949 -0.2853...
         -0.1212 -0.0695...
         -0.0337 1.0807...
         -0.5265;...
         -4.5264 -0.6907...
         0.6750 0.0578...
         0.0245 -1.1010...
         0.7766;...
         1.6680 -3.0247...
         0.4296 -0.0993...
         0.0738 1.5918...
         -0.6479;...
         0.0190 0.0191...
         -0.0114 0.0038...
         -0.0274 0.0066...
         -0.0042;...
         1.4004 3.9910...
         0.3176 0.0115...
         -0.0061 -0.4929...
         0.2426;...
         1.4622 -1.3385...
         -0.8225 -0.0186...
         0.1174 0.8168...
         -0.4337;...
         -0.1795 0.0633...
         0.0581 -1.9441...
         -0.5394 0.8492...
         1.1404;...
         4.1164 -3.7823...
         -1.2198 -0.0315...
         0.1382 2.1266...
         -1.0906;...
         -0.2711 0.3640...
         -0.6401 -0.1163...
         -0.0878 0.8797...
         -0.4282;...
         0.0131 0.0049...
         0.0133 0.0145...
         0.0236 0.0187...
         0.0131;...
         1.3617 0.9513...
         -0.0301 0.1000...
         -0.0430 -0.5534...
         0.1573;...
         -1.5278 -0.2523...
         -1.9913 0.1338...
         -0.1664 -0.4574...
         0.2465;...
         -1.2888 -0.1268...
         -2.3033 0.1837...
         -0.2083 -0.7755...
         0.4563;...
         -1.2780 0.1447...
         0.2273 0.5401...
         -0.6960 -1.8484...
         0.8965;...
         -0.0012 -0.0010...
         -0.0006 -0.0003...
         0.0014 0.0002...
         0.0010;...
         -0.0022 -0.0235...
         0.0022 0.0210...
         -0.0055 0.0151...
         0.0353;...
         0.2010 0.1109...
         -0.0696 0.2428...
         -0.0509 -1.3539...
         -0.0903;...
         -0.0375 -0.0188...
         0.0434 -0.0003...
         0.0485 -0.0168...
         -0.0086;...
         0.6019 0.0143...
         -0.1198 -0.3948...
         0.6132 2.9118...
         -1.8616;...
         -0.4910 -0.1716...
         -0.0717 -0.7121...
         0.0278 -1.3402...
         0.6723];

% Layer 2
b2 = -0.1705;
IW2_1 = [0.3738 0.6056...
        -0.1762 0.3392...
        -0.6897 0.0498...
        0.5062];

LW2_1 = [-0.0119 0.8936...
          1.1127 -0.0108...
          0.0615 -0.0094...
          0.2122 1.6431...
          -3.4588 0.9204...
          2.2875 -1.2244...
          -0.0356 0.5949...
          -1.8507 -2.2334...
          -0.0177 1.6225...
          2.0728 -2.1855...
          -1.9337 0.9005...
          -0.6947 2.0427...
          3.2541 -0.0481...
          1.2144 -0.0160...
          -3.3998 -1.9511...
          0.0425 -0.0054...
          -0.2249 -1.1325...
          -0.9447 2.5211...
          -2.6650 -1.3734...
          -0.9426 -4.9254...
          2.9083 0.7393...
          -1.2863 0.0426...
          -1.1205 0.4036...
          -0.9298 0.3857...
          -0.6798 0.0138...
          1.0475 -0.8839...
          1.5744 1.2440...
          -0.0021 -0.0079...
          -1.7055 -0.0725...
          1.1555 -0.3950];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.000603950486898349;
y1_step1.xoffset = 1.2312601;

% ===== SIMULATION ========

% Dimensio
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + IW2_1*xp1 + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
